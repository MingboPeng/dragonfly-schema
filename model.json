{
  "openapi": "3.0.2",
  "servers": [],
  "info": {
    "description": "This is the documentation for Dragonfly model schema.",
    "version": "1.3.0",
    "title": "Dragonfly Model Schema",
    "contact": {
      "name": "Ladybug Tools",
      "email": "info@ladybug.tools",
      "url": "https://github.com/ladybug-tools/dragonfly-core"
    },
    "x-logo": {
      "url": "https://www.ladybug.tools/assets/img/dragonfly-large.png",
      "altText": "Dragonfly logo"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/ladybug-tools/dragonfly-schema/blob/master/LICENSE"
    }
  },
  "externalDocs": {
    "description": "See how to use these schema in action.",
    "url": "https://api.pollination.cloud/"
  },
  "tags": [
    {
      "name": "adiabatic_model",
      "x-displayName": "Adiabatic",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Adiabatic\" />\n"
    },
    {
      "name": "aperturesetabridged_model",
      "x-displayName": "ApertureSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ApertureSetAbridged\" />\n"
    },
    {
      "name": "building_model",
      "x-displayName": "Building",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Building\" />\n"
    },
    {
      "name": "constructionsetabridged_model",
      "x-displayName": "ConstructionSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ConstructionSetAbridged\" />\n"
    },
    {
      "name": "contextshade_model",
      "x-displayName": "ContextShade",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ContextShade\" />\n"
    },
    {
      "name": "contextshadeenergypropertiesabridged_model",
      "x-displayName": "ContextShadeEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ContextShadeEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "contextshadepropertiesabridged_model",
      "x-displayName": "ContextShadePropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ContextShadePropertiesAbridged\" />\n"
    },
    {
      "name": "detailedwindows_model",
      "x-displayName": "DetailedWindows",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DetailedWindows\" />\n"
    },
    {
      "name": "doorsetabridged_model",
      "x-displayName": "DoorSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/DoorSetAbridged\" />\n"
    },
    {
      "name": "electricequipmentabridged_model",
      "x-displayName": "ElectricEquipmentAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ElectricEquipmentAbridged\" />\n"
    },
    {
      "name": "energymaterial_model",
      "x-displayName": "EnergyMaterial",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterial\" />\n"
    },
    {
      "name": "energymaterialnomass_model",
      "x-displayName": "EnergyMaterialNoMass",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyMaterialNoMass\" />\n"
    },
    {
      "name": "energywindowmaterialblind_model",
      "x-displayName": "EnergyWindowMaterialBlind",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialBlind\" />\n"
    },
    {
      "name": "energywindowmaterialgas_model",
      "x-displayName": "EnergyWindowMaterialGas",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGas\" />\n"
    },
    {
      "name": "energywindowmaterialgascustom_model",
      "x-displayName": "EnergyWindowMaterialGasCustom",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGasCustom\" />\n"
    },
    {
      "name": "energywindowmaterialgasmixture_model",
      "x-displayName": "EnergyWindowMaterialGasMixture",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGasMixture\" />\n"
    },
    {
      "name": "energywindowmaterialglazing_model",
      "x-displayName": "EnergyWindowMaterialGlazing",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialGlazing\" />\n"
    },
    {
      "name": "energywindowmaterialshade_model",
      "x-displayName": "EnergyWindowMaterialShade",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialShade\" />\n"
    },
    {
      "name": "energywindowmaterialsimpleglazsys_model",
      "x-displayName": "EnergyWindowMaterialSimpleGlazSys",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EnergyWindowMaterialSimpleGlazSys\" />\n"
    },
    {
      "name": "extrudedborder_model",
      "x-displayName": "ExtrudedBorder",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ExtrudedBorder\" />\n"
    },
    {
      "name": "face3d_model",
      "x-displayName": "Face3D",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Face3D\" />\n"
    },
    {
      "name": "floorsetabridged_model",
      "x-displayName": "FloorSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/FloorSetAbridged\" />\n"
    },
    {
      "name": "gasequipmentabridged_model",
      "x-displayName": "GasEquipmentAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/GasEquipmentAbridged\" />\n"
    },
    {
      "name": "ground_model",
      "x-displayName": "Ground",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Ground\" />\n"
    },
    {
      "name": "idealairsystemabridged_model",
      "x-displayName": "IdealAirSystemAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/IdealAirSystemAbridged\" />\n"
    },
    {
      "name": "infiltrationabridged_model",
      "x-displayName": "InfiltrationAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/InfiltrationAbridged\" />\n"
    },
    {
      "name": "lightingabridged_model",
      "x-displayName": "LightingAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LightingAbridged\" />\n"
    },
    {
      "name": "louversbycount_model",
      "x-displayName": "LouversByCount",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LouversByCount\" />\n"
    },
    {
      "name": "louversbydistance_model",
      "x-displayName": "LouversByDistance",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/LouversByDistance\" />\n"
    },
    {
      "name": "model_model",
      "x-displayName": "Model",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Model\" />\n"
    },
    {
      "name": "modelenergyproperties_model",
      "x-displayName": "ModelEnergyProperties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelEnergyProperties\" />\n"
    },
    {
      "name": "modelproperties_model",
      "x-displayName": "ModelProperties",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ModelProperties\" />\n"
    },
    {
      "name": "opaqueconstructionabridged_model",
      "x-displayName": "OpaqueConstructionAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/OpaqueConstructionAbridged\" />\n"
    },
    {
      "name": "outdoors_model",
      "x-displayName": "Outdoors",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Outdoors\" />\n"
    },
    {
      "name": "overhang_model",
      "x-displayName": "Overhang",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Overhang\" />\n"
    },
    {
      "name": "peopleabridged_model",
      "x-displayName": "PeopleAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/PeopleAbridged\" />\n"
    },
    {
      "name": "plane_model",
      "x-displayName": "Plane",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Plane\" />\n"
    },
    {
      "name": "programtypeabridged_model",
      "x-displayName": "ProgramTypeAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProgramTypeAbridged\" />\n"
    },
    {
      "name": "rectangularwindows_model",
      "x-displayName": "RectangularWindows",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RectangularWindows\" />\n"
    },
    {
      "name": "repeatingwindowratio_model",
      "x-displayName": "RepeatingWindowRatio",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RepeatingWindowRatio\" />\n"
    },
    {
      "name": "roofceilingsetabridged_model",
      "x-displayName": "RoofCeilingSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/RoofCeilingSetAbridged\" />\n"
    },
    {
      "name": "room2d_model",
      "x-displayName": "Room2D",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room2D\" />\n"
    },
    {
      "name": "room2denergypropertiesabridged_model",
      "x-displayName": "Room2DEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room2DEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "room2dpropertiesabridged_model",
      "x-displayName": "Room2DPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room2DPropertiesAbridged\" />\n"
    },
    {
      "name": "scheduleday_model",
      "x-displayName": "ScheduleDay",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleDay\" />\n"
    },
    {
      "name": "schedulefixedintervalabridged_model",
      "x-displayName": "ScheduleFixedIntervalAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleFixedIntervalAbridged\" />\n"
    },
    {
      "name": "scheduleruleabridged_model",
      "x-displayName": "ScheduleRuleAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRuleAbridged\" />\n"
    },
    {
      "name": "schedulerulesetabridged_model",
      "x-displayName": "ScheduleRulesetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleRulesetAbridged\" />\n"
    },
    {
      "name": "scheduletypelimit_model",
      "x-displayName": "ScheduleTypeLimit",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ScheduleTypeLimit\" />\n"
    },
    {
      "name": "setpointabridged_model",
      "x-displayName": "SetpointAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SetpointAbridged\" />\n"
    },
    {
      "name": "shadeconstruction_model",
      "x-displayName": "ShadeConstruction",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ShadeConstruction\" />\n"
    },
    {
      "name": "simplewindowratio_model",
      "x-displayName": "SimpleWindowRatio",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SimpleWindowRatio\" />\n"
    },
    {
      "name": "singlewindow_model",
      "x-displayName": "SingleWindow",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/SingleWindow\" />\n"
    },
    {
      "name": "story_model",
      "x-displayName": "Story",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Story\" />\n"
    },
    {
      "name": "storyenergypropertiesabridged_model",
      "x-displayName": "StoryEnergyPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/StoryEnergyPropertiesAbridged\" />\n"
    },
    {
      "name": "storypropertiesabridged_model",
      "x-displayName": "StoryPropertiesAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/StoryPropertiesAbridged\" />\n"
    },
    {
      "name": "surface_model",
      "x-displayName": "Surface",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Surface\" />\n"
    },
    {
      "name": "ventilationabridged_model",
      "x-displayName": "VentilationAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/VentilationAbridged\" />\n"
    },
    {
      "name": "wallsetabridged_model",
      "x-displayName": "WallSetAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WallSetAbridged\" />\n"
    },
    {
      "name": "windowconstructionabridged_model",
      "x-displayName": "WindowConstructionAbridged",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/WindowConstructionAbridged\" />\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Models",
      "tags": [
        "adiabatic_model",
        "aperturesetabridged_model",
        "building_model",
        "constructionsetabridged_model",
        "contextshade_model",
        "contextshadeenergypropertiesabridged_model",
        "contextshadepropertiesabridged_model",
        "detailedwindows_model",
        "doorsetabridged_model",
        "electricequipmentabridged_model",
        "energymaterial_model",
        "energymaterialnomass_model",
        "energywindowmaterialblind_model",
        "energywindowmaterialgas_model",
        "energywindowmaterialgascustom_model",
        "energywindowmaterialgasmixture_model",
        "energywindowmaterialglazing_model",
        "energywindowmaterialshade_model",
        "energywindowmaterialsimpleglazsys_model",
        "extrudedborder_model",
        "face3d_model",
        "floorsetabridged_model",
        "gasequipmentabridged_model",
        "ground_model",
        "idealairsystemabridged_model",
        "infiltrationabridged_model",
        "lightingabridged_model",
        "louversbycount_model",
        "louversbydistance_model",
        "model_model",
        "modelenergyproperties_model",
        "modelproperties_model",
        "opaqueconstructionabridged_model",
        "outdoors_model",
        "overhang_model",
        "peopleabridged_model",
        "plane_model",
        "programtypeabridged_model",
        "rectangularwindows_model",
        "repeatingwindowratio_model",
        "roofceilingsetabridged_model",
        "room2d_model",
        "room2denergypropertiesabridged_model",
        "room2dpropertiesabridged_model",
        "scheduleday_model",
        "schedulefixedintervalabridged_model",
        "scheduleruleabridged_model",
        "schedulerulesetabridged_model",
        "scheduletypelimit_model",
        "setpointabridged_model",
        "shadeconstruction_model",
        "simplewindowratio_model",
        "singlewindow_model",
        "story_model",
        "storyenergypropertiesabridged_model",
        "storypropertiesabridged_model",
        "surface_model",
        "ventilationabridged_model",
        "wallsetabridged_model",
        "windowconstructionabridged_model"
      ]
    }
  ],
  "paths": {},
  "components": {
    "schemas": {
      "Ground": {
        "title": "Ground",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Ground",
            "type": "string",
            "pattern": "^Ground$"
          }
        }
      },
      "Outdoors": {
        "title": "Outdoors",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Outdoors",
            "type": "string",
            "pattern": "^Outdoors$"
          },
          "sun_exposure": {
            "title": "Sun Exposure",
            "description": "A boolean noting whether the boundary is exposed to sun.",
            "default": true,
            "type": "boolean"
          },
          "wind_exposure": {
            "title": "Wind Exposure",
            "description": "A boolean noting whether the boundary is exposed to wind.",
            "default": true,
            "type": "boolean"
          },
          "view_factor": {
            "title": "View Factor",
            "description": "A number for the view factor to the ground. This can also be the word \"autocalculate\" to have the view factor automatically calculated.",
            "default": "autocalculate",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            ]
          }
        }
      },
      "Adiabatic": {
        "title": "Adiabatic",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Adiabatic",
            "type": "string",
            "pattern": "^Adiabatic$"
          }
        }
      },
      "Surface": {
        "title": "Surface",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Surface",
            "type": "string",
            "pattern": "^Surface$"
          },
          "boundary_condition_objects": {
            "title": "Boundary Condition Objects",
            "description": "A list of up to 3 object names that are adjacent to this one. The first object is always the one that is immediately adjacet and is of the same object type (Face, Aperture, Door). When this boundary condition is applied to a Face, the second object in the tuple will be the parent Room of the adjacent object. When the boundary condition is applied to a sub-face (Door or Aperture), the second object will be the parent Face of the adjacent sub-face and the third object will be the parent Room of the adjacent sub-face.",
            "min_tems": 2,
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 3
          }
        },
        "required": [
          "boundary_condition_objects"
        ]
      },
      "SingleWindow": {
        "title": "SingleWindow",
        "description": "A single window in the wall center defined by a width * height.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "SingleWindow",
            "type": "string",
            "pattern": "^SingleWindow$"
          },
          "width": {
            "title": "Width",
            "description": "A number for the window width. Note that, if this width is applied to a wall that is too narrow for this width, the generated window will automatically be shortened when it is applied to the wall. In this way, setting the width to be `float(\"inf\")` will create parameters that always generate a ribboin window.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "height": {
            "title": "Height",
            "description": "A number for the window height. Note that, if this height is applied to a wall that is too short for this height, the generated window will automatically be shortened when it is applied to the wall.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "sill_height": {
            "title": "Sill Height",
            "description": "A number for the window sill height.",
            "default": 1.0,
            "exclusiveMinimum": 0,
            "type": "number"
          }
        },
        "required": [
          "width",
          "height"
        ]
      },
      "SimpleWindowRatio": {
        "title": "SimpleWindowRatio",
        "description": "A single window defined by an area ratio with the base surface.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "SimpleWindowRatio",
            "type": "string",
            "pattern": "^SimpleWindowRatio$"
          },
          "window_ratio": {
            "title": "Window Ratio",
            "description": "A number between 0 and 1 for the ratio between the window area and the parent wall surface area.",
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number"
          }
        },
        "required": [
          "window_ratio"
        ]
      },
      "RepeatingWindowRatio": {
        "title": "RepeatingWindowRatio",
        "description": "Repeating windows derived from an area ratio with the base wall.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RepeatingWindowRatio",
            "type": "string",
            "pattern": "^RepeatingWindowRatio$"
          },
          "window_ratio": {
            "title": "Window Ratio",
            "description": "A number between 0 and 1 for the ratio between the window area and the parent wall surface area.",
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number"
          },
          "window_height": {
            "title": "Window Height",
            "description": "A number for the target height of the windows. Note that, if the window ratio is too large for the height, the ratio will take precedence and the actual window_height will be larger than this value.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "sill_height": {
            "title": "Sill Height",
            "description": "A number for the target height above the bottom edge of the rectangle to start the windows. Note that, if the ratio is too large for the height, the ratio will take precedence and the sill_height will be smaller than this value.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "horizontal_separation": {
            "title": "Horizontal Separation",
            "description": "A number for the target separation between individual window centerlines.  If this number is larger than the parent rectangle base, only one window will be produced.",
            "minimum": 0,
            "type": "number"
          },
          "vertical_separation": {
            "title": "Vertical Separation",
            "description": "An optional number to create a single vertical separation between top and bottom windows.",
            "default": 0,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "window_ratio",
          "window_height",
          "sill_height",
          "horizontal_separation"
        ]
      },
      "RectangularWindows": {
        "title": "RectangularWindows",
        "description": "Several rectangular windows, defined by origin, width and height.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RectangularWindows",
            "type": "string",
            "pattern": "^RectangularWindows$"
          },
          "origins": {
            "title": "Origins",
            "description": "An array of 2D points within the plane of the wall for the origin of each window. Each point should be a list of 2 (x, y) values. The wall plane is assumed to have an origin at the first point of the wall segment and an X-axis extending along the length of the segment. The wall plane Y-axis always points upwards. Therefore, both X and Y values of each origin point should be positive.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "minItems": 2,
              "maxItems": 2
            },
            "minItems": 1
          },
          "widths": {
            "title": "Widths",
            "description": "An array of postive numbers for the window widths. The length of this list must match the length of the origins.",
            "type": "array",
            "items": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "minItems": 1
          },
          "heights": {
            "title": "Heights",
            "description": "An array of postive numbers for the window heights. The length of this list must match the length of the origins.",
            "type": "array",
            "items": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "minItems": 1
          }
        },
        "required": [
          "origins",
          "widths",
          "heights"
        ]
      },
      "DetailedWindows": {
        "title": "DetailedWindows",
        "description": "Several detailed windows defined by 2D Polygons (lists of 2D vertices).",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "DetailedWindows",
            "type": "string",
            "pattern": "^DetailedWindows$"
          },
          "polygons": {
            "title": "Polygons",
            "description": "An array of arrays with each sub-array representing a polygonal boundary of a window within the plane of the wall. Each sub-array should consist of at least three 2D points and each point should be a list of 2 (x, y) values. The wall plane is assumed to have an origin at the first point of the wall segment and an X-axis extending along the length of the segment. The wall plane Y-axis always points upwards. Therefore, both X and Y values of each point in the polygon should always be positive. Note that, if you are starting from 3D vertices of windows, you can use these window parameters to represent them. Some sample code to convert from 2D vertices to 2D vertices in the plane of the wall can be found here: https://www.ladybug.tools/dragonfly-core/docs/dragonfly.windowparameter.html#dragonfly.windowparameter.DetailedWindows",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "minItems": 2,
                "maxItems": 2
              },
              "minItems": 3
            }
          }
        },
        "required": [
          "polygons"
        ]
      },
      "ExtrudedBorder": {
        "title": "ExtrudedBorder",
        "description": "Extruded borders over all windows in the wall.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ExtrudedBorder",
            "type": "string",
            "pattern": "^ExtrudedBorder$"
          },
          "depth": {
            "title": "Depth",
            "description": "A number for the depth of the border.",
            "exclusiveMinimum": 0,
            "type": "number"
          }
        },
        "required": [
          "depth"
        ]
      },
      "Overhang": {
        "title": "Overhang",
        "description": "A single overhang over an entire wall.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Overhang",
            "type": "string",
            "pattern": "^Overhang$"
          },
          "depth": {
            "title": "Depth",
            "description": "A number for the overhang depth.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "angle": {
            "title": "Angle",
            "description": "A number between -90 and 90 for the for an angle to rotate the overhang in degrees. 0 indicates an overhang perpendicular to the wall. Positive values indicate a downward rotation. Negative values indicate an upward rotation.",
            "default": 0,
            "minimum": -90,
            "maximum": 90,
            "type": "number"
          }
        },
        "required": [
          "depth"
        ]
      },
      "LouversByDistance": {
        "title": "LouversByDistance",
        "description": "A series of louvered Shades at a given distance between each louver.",
        "type": "object",
        "properties": {
          "depth": {
            "title": "Depth",
            "description": "A number for the depth to extrude the louvers.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "offset": {
            "title": "Offset",
            "description": "A number for the distance to louvers from the wall.",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "angle": {
            "title": "Angle",
            "description": "A number between -90 and 90 for the for an angle to rotate the louvers in degrees. 0 indicates louvers perpendicular to the wall. Positive values indicate a downward rotation. Negative values indicate an upward rotation.",
            "default": 0,
            "minimum": -90,
            "maximum": 90,
            "type": "number"
          },
          "contour_vector": {
            "title": "Contour Vector",
            "description": "A list of two float values representing the (x, y) of a 2D vector for the direction along which contours are generated. (0, 1) will generate horizontal contours, (1, 0) will generate vertical contours, and (1, 1) will generate diagonal contours.",
            "default": [
              0,
              1
            ],
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "flip_start_side": {
            "title": "Flip Start Side",
            "description": "Boolean to note whether the side the louvers start from should be flipped. Default is False to have contours on top or right. Setting to True will start contours on the bottom or left.",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "default": "LouversByDistance",
            "type": "string",
            "pattern": "^LouversByDistance$"
          },
          "distance": {
            "title": "Distance",
            "description": "A number for the approximate distance between each louver.",
            "exclusiveMinimum": 0,
            "type": "number"
          }
        },
        "required": [
          "depth",
          "distance"
        ]
      },
      "LouversByCount": {
        "title": "LouversByCount",
        "description": "A specific number of louvered Shades over a wall.",
        "type": "object",
        "properties": {
          "depth": {
            "title": "Depth",
            "description": "A number for the depth to extrude the louvers.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "offset": {
            "title": "Offset",
            "description": "A number for the distance to louvers from the wall.",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "angle": {
            "title": "Angle",
            "description": "A number between -90 and 90 for the for an angle to rotate the louvers in degrees. 0 indicates louvers perpendicular to the wall. Positive values indicate a downward rotation. Negative values indicate an upward rotation.",
            "default": 0,
            "minimum": -90,
            "maximum": 90,
            "type": "number"
          },
          "contour_vector": {
            "title": "Contour Vector",
            "description": "A list of two float values representing the (x, y) of a 2D vector for the direction along which contours are generated. (0, 1) will generate horizontal contours, (1, 0) will generate vertical contours, and (1, 1) will generate diagonal contours.",
            "default": [
              0,
              1
            ],
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "flip_start_side": {
            "title": "Flip Start Side",
            "description": "Boolean to note whether the side the louvers start from should be flipped. Default is False to have contours on top or right. Setting to True will start contours on the bottom or left.",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "default": "LouversByCount",
            "type": "string",
            "pattern": "^LouversByCount$"
          },
          "louver_count": {
            "title": "Louver Count",
            "description": "A positive integer for the number of louvers to generate.",
            "exclusiveMinimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "depth",
          "louver_count"
        ]
      },
      "Room2DEnergyPropertiesAbridged": {
        "title": "Room2DEnergyPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Room2DEnergyPropertiesAbridged",
            "type": "string",
            "pattern": "^Room2DEnergyPropertiesAbridged$"
          },
          "construction_set": {
            "title": "Construction Set",
            "description": "Name of a ConstructionSet to specify all constructions for the Room2D. If None, the Room2D will use the Story or Building construction_set or the Model global_construction_set. Any ConstructionSet assigned here will override those assigned to these objects.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "program_type": {
            "title": "Program Type",
            "description": "Name of a ProgramType to specify all schedules and loads for the Room2D. If None, the Room2D will have no loads or setpoints.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "hvac": {
            "title": "Hvac",
            "description": "An optional name of a HVAC system (such as an IdealAirSystem) that specifies how the Room2D is conditioned. If None, it will be assumed that the Room2D is not conditioned.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "Room2DPropertiesAbridged": {
        "title": "Room2DPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Room2DPropertiesAbridged",
            "type": "string",
            "pattern": "^Room2DPropertiesAbridged$"
          },
          "energy": {
            "$ref": "#/components/schemas/Room2DEnergyPropertiesAbridged"
          }
        }
      },
      "Room2D": {
        "title": "Room2D",
        "description": "Base class for all objects requiring a valid names for all engines.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object used in all simulation engines. Must not contain spaces and use only letters, digits and underscores/dashes. It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "[A-Za-z0-9_-]",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Room2D",
            "type": "string",
            "pattern": "^Room2D$"
          },
          "floor_boundary": {
            "title": "Floor Boundary",
            "description": "A list of 2D points representing the outer boundary vertices of the Room2D. The list should include at least 3 points and each point should be a list of 2 (x, y) values.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "minItems": 3
          },
          "floor_holes": {
            "title": "Floor Holes",
            "description": "Optional list of lists with one list for each hole in the floor plate.Each hole should be a list of at least 2 points and each point a list of 2 (x, y) values. If None, it will be assumed that there are no holes in the floor plate.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              "minItems": 3
            }
          },
          "floor_height": {
            "title": "Floor Height",
            "description": "A number to indicate the height of the floor plane in the Z axis.",
            "type": "number"
          },
          "floor_to_ceiling_height": {
            "title": "Floor To Ceiling Height",
            "description": "A number for the distance between the floor and the ceiling.",
            "type": "number"
          },
          "is_ground_contact": {
            "title": "Is Ground Contact",
            "description": "A boolean noting whether this Room2D has its floor in contact with the ground.",
            "default": false,
            "type": "boolean"
          },
          "is_top_floor": {
            "title": "Is Top Floor",
            "description": "A boolean noting whether this Room2D has its ceiling exposed to the outdoors.",
            "default": false,
            "type": "boolean"
          },
          "boundary_conditions": {
            "title": "Boundary Conditions",
            "description": "A list of boundary conditions that match the number of segments in the input floor_geometry + floor_holes. These will be used to assign boundary conditions to each of the walls of the Room in the resulting model. Their order should align with the order of segments in the floor_boundary and then with each hole segment. If None, all boundary conditions will be Outdoors or Ground depending on whether ceiling height of the room is at or below 0 (the assumed ground plane).",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Ground"
                },
                {
                  "$ref": "#/components/schemas/Outdoors"
                },
                {
                  "$ref": "#/components/schemas/Adiabatic"
                },
                {
                  "$ref": "#/components/schemas/Surface"
                }
              ]
            }
          },
          "window_parameters": {
            "title": "Window Parameters",
            "description": "A list of WindowParameter objects that dictate how the window geometries will be generated for each of the walls. If None, no windows will exist over the entire Room2D.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SingleWindow"
                },
                {
                  "$ref": "#/components/schemas/SimpleWindowRatio"
                },
                {
                  "$ref": "#/components/schemas/RepeatingWindowRatio"
                },
                {
                  "$ref": "#/components/schemas/RectangularWindows"
                },
                {
                  "$ref": "#/components/schemas/DetailedWindows"
                }
              ]
            }
          },
          "shading_parameters": {
            "title": "Shading Parameters",
            "description": "A list of ShadingParameter objects that dictate how the shade geometries will be generated for each of the walls. If None, no shades will exist over the entire Room2D.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExtrudedBorder"
                },
                {
                  "$ref": "#/components/schemas/Overhang"
                },
                {
                  "$ref": "#/components/schemas/LouversByDistance"
                },
                {
                  "$ref": "#/components/schemas/LouversByCount"
                }
              ]
            }
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Room2DPropertiesAbridged"
              }
            ]
          }
        },
        "required": [
          "name",
          "floor_boundary",
          "floor_height",
          "floor_to_ceiling_height",
          "properties"
        ]
      },
      "StoryEnergyPropertiesAbridged": {
        "title": "StoryEnergyPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "StoryEnergyPropertiesAbridged",
            "type": "string",
            "pattern": "^StoryEnergyPropertiesAbridged$"
          },
          "construction_set": {
            "title": "Construction Set",
            "description": "Name of a ConstructionSet to specify all constructions for the Story. If None, the Story will use the Building construction_set or the Model global_construction_set. Any ConstructionSet assigned here will override those assigned to these objects.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "StoryPropertiesAbridged": {
        "title": "StoryPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "StoryPropertiesAbridged",
            "type": "string",
            "pattern": "^StoryPropertiesAbridged$"
          },
          "energy": {
            "$ref": "#/components/schemas/StoryEnergyPropertiesAbridged"
          }
        }
      },
      "Story": {
        "title": "Story",
        "description": "Base class for all objects requiring a valid names for all engines.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object used in all simulation engines. Must not contain spaces and use only letters, digits and underscores/dashes. It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "[A-Za-z0-9_-]",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Story",
            "type": "string",
            "pattern": "^Story$"
          },
          "room_2ds": {
            "title": "Room 2Ds",
            "description": "An array of dragonfly Room2D objects that together form an entire story of a building.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Room2D"
            }
          },
          "floor_to_floor_height": {
            "title": "Floor To Floor Height",
            "description": "A number for the distance from the floor plate of this story to the floor of the story above this one (if it exists). If None, this value will be the maximum floor_to_ceiling_height of the input room_2ds.",
            "type": "number"
          },
          "multiplier": {
            "title": "Multiplier",
            "description": "An integer that denotes the number of times that this Story is repeated over the height of the building.",
            "default": 1,
            "minimum": 1,
            "type": "integer"
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/StoryPropertiesAbridged"
              }
            ]
          }
        },
        "required": [
          "name",
          "room_2ds",
          "properties"
        ]
      },
      "Building": {
        "title": "Building",
        "description": "Base class for all objects requiring a valid names for all engines.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object used in all simulation engines. Must not contain spaces and use only letters, digits and underscores/dashes. It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "[A-Za-z0-9_-]",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Building",
            "type": "string",
            "pattern": "^Building$"
          },
          "unique_stories": {
            "title": "Unique Stories",
            "description": "An array of unique dragonfly Story objects that together form the entire building. Stories should generally be ordered from lowest floor to highest floor. Note that, if a given Story is repeated several times over the height of the building, the unique story included in this list should be the first (lowest) story of the repeated floors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Story"
            }
          }
        },
        "required": [
          "name",
          "unique_stories"
        ]
      },
      "Plane": {
        "title": "Plane",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Plane",
            "type": "string",
            "pattern": "^Plane$"
          },
          "n": {
            "title": "N",
            "description": "Plane normal as 3 (x, y, z) values.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 3,
            "maxItems": 3
          },
          "o": {
            "title": "O",
            "description": "Plane origin as 3 (x, y, z) values",
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 3,
            "maxItems": 3
          },
          "x": {
            "title": "X",
            "description": "Plane x-axis as 3 (x, y, z) values. If None, it is autocalculated.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 3,
            "maxItems": 3
          }
        },
        "required": [
          "n",
          "o"
        ]
      },
      "Face3D": {
        "title": "Face3D",
        "description": "A single planar face in 3D space.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "Face3D",
            "type": "string",
            "pattern": "^Face3D$"
          },
          "boundary": {
            "title": "Boundary",
            "description": "A list of points representing the outer boundary vertices of the face. The list should include at least 3 points and each point should be a list of 3 (x, y, z) values.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 3,
              "maxItems": 3
            },
            "minItems": 3
          },
          "holes": {
            "title": "Holes",
            "description": "Optional list of lists with one list for each hole in the face.Each hole should be a list of at least 3 points and each point a list of 3 (x, y, z) values. If None, it will be assumed that there are no holes in the face.",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 3,
                "maxItems": 3
              },
              "minItems": 3
            }
          },
          "plane": {
            "title": "Plane",
            "description": "Optional Plane indicating the plane in which the face exists.If None, the plane will usually be derived from the boundary points.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Plane"
              }
            ]
          }
        },
        "required": [
          "boundary"
        ]
      },
      "ContextShadeEnergyPropertiesAbridged": {
        "title": "ContextShadeEnergyPropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ContextShadeEnergyPropertiesAbridged",
            "type": "string",
            "pattern": "^ContextShadeEnergyPropertiesAbridged$"
          },
          "construction": {
            "title": "Construction",
            "description": "Name of a ShadeConstruction to set the reflectance and specularity of the ContextShade. If None, the the EnergyPlus default of 0.2 diffuse reflectance will be used.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "transmittance_schedule": {
            "title": "Transmittance Schedule",
            "description": "Name of a schedule to set the transmittance of the ContextShade, which can vary throughout the simulation. If None, the ContextShade will be completely opauqe.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "ContextShadePropertiesAbridged": {
        "title": "ContextShadePropertiesAbridged",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ContextShadePropertiesAbridged",
            "type": "string",
            "pattern": "^ContextShadePropertiesAbridged$"
          },
          "energy": {
            "$ref": "#/components/schemas/ContextShadeEnergyPropertiesAbridged"
          }
        }
      },
      "ContextShade": {
        "title": "ContextShade",
        "description": "Base class for all objects requiring a valid names for all engines.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object used in all simulation engines. Must not contain spaces and use only letters, digits and underscores/dashes. It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "[A-Za-z0-9_-]",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ContextShade",
            "type": "string",
            "pattern": "^ContextShade$"
          },
          "geometry": {
            "title": "Geometry",
            "description": "An array of planar Face3Ds that together represent the context shade.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Face3D"
            }
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContextShadePropertiesAbridged"
              }
            ]
          }
        },
        "required": [
          "name",
          "geometry",
          "properties"
        ]
      },
      "WallSetAbridged": {
        "title": "WallSetAbridged",
        "description": "A set of constructions for wall assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "WallSetAbridged",
            "type": "string",
            "pattern": "^WallSetAbridged$"
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Name for an OpaqueConstruction for walls with a Surface or Adiabatic boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Name for an OpaqueConstruction for walls with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "Name for an OpaqueConstruction for walls with a Ground boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "FloorSetAbridged": {
        "title": "FloorSetAbridged",
        "description": "A set of constructions for floor assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "FloorSetAbridged",
            "type": "string",
            "pattern": "^FloorSetAbridged$"
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Name for an OpaqueConstruction for floors with a Surface or Adiabatic boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Name for an OpaqueConstruction for floors with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "Name for an OpaqueConstruction for floors with a Ground boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "RoofCeilingSetAbridged": {
        "title": "RoofCeilingSetAbridged",
        "description": "A set of constructions for roof and ceiling assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "RoofCeilingSetAbridged",
            "type": "string",
            "pattern": "^RoofCeilingSetAbridged$"
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Name for an OpaqueConstruction for ceilings with a Surface or Adiabatic boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Name for an OpaqueConstruction for roofs with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "ground_construction": {
            "title": "Ground Construction",
            "description": "Name for an OpaqueConstruction for roofs with a Ground boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "ApertureSetAbridged": {
        "title": "ApertureSetAbridged",
        "description": "A set of constructions for aperture assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ApertureSetAbridged",
            "type": "string",
            "pattern": "^ApertureSetAbridged$"
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Name for a WindowConstruction for apertures with an Outdoors boundary condition, False is_operable property, and a Wall face type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "window_construction": {
            "title": "Window Construction",
            "description": "Name for a WindowConstruction for all apertures with a Surface boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "skylight_construction": {
            "title": "Skylight Construction",
            "description": "Name for a WindowConstruction for apertures with a Outdoors boundary condition, False is_operable property, and a RoofCeiling or Floor face type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "operable_construction": {
            "title": "Operable Construction",
            "description": "Name for a WindowConstruction for all apertures with an Outdoors boundary condition and True is_operable property..",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "DoorSetAbridged": {
        "title": "DoorSetAbridged",
        "description": "A set of constructions for door assemblies.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "DoorSetAbridged",
            "type": "string",
            "pattern": "^DoorSetAbridged$"
          },
          "interior_construction": {
            "title": "Interior Construction",
            "description": "Name for an OpaqueConstruction for all opaque doors with a Surface boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_construction": {
            "title": "Exterior Construction",
            "description": "Name for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a Wall face type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "overhead_construction": {
            "title": "Overhead Construction",
            "description": "Name for an OpaqueConstruction for opaque doors with an Outdoors boundary condition and a RoofCeiling or Floor type for their parent face.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "exterior_glass_construction": {
            "title": "Exterior Glass Construction",
            "description": "Name for an WindowConstruction for all glass doors with an Outdoors boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "interior_glass_construction": {
            "title": "Interior Glass Construction",
            "description": "Name for an WindowConstruction for all glass doors with a Surface boundary condition.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "ConstructionSetAbridged": {
        "title": "ConstructionSetAbridged",
        "description": "A set of constructions for different surface types and boundary conditions.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ConstructionSetAbridged",
            "type": "string",
            "pattern": "^ConstructionSetAbridged$"
          },
          "wall_set": {
            "title": "Wall Set",
            "description": "A WallSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WallSetAbridged"
              }
            ]
          },
          "floor_set": {
            "title": "Floor Set",
            "description": "A FloorSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FloorSetAbridged"
              }
            ]
          },
          "roof_ceiling_set": {
            "title": "Roof Ceiling Set",
            "description": "A RoofCeilingSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoofCeilingSetAbridged"
              }
            ]
          },
          "aperture_set": {
            "title": "Aperture Set",
            "description": "A ApertureSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ApertureSetAbridged"
              }
            ]
          },
          "door_set": {
            "title": "Door Set",
            "description": "A DoorSet object for this ConstructionSet.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoorSetAbridged"
              }
            ]
          },
          "shade_construction": {
            "title": "Shade Construction",
            "description": "A ShadeConstruction to set the reflectance properties of all outdoor shades to which this ConstructionSet is assigned.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "OpaqueConstructionAbridged": {
        "title": "OpaqueConstructionAbridged",
        "description": "Construction for opaque objects (Face, Shade, Door).",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "OpaqueConstructionAbridged",
            "type": "string",
            "pattern": "^OpaqueConstructionAbridged$"
          },
          "layers": {
            "title": "Layers",
            "description": "List of strings for material names. The order of the materials is from exterior to interior.",
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "minItems": 1,
            "maxItems": 10
          }
        },
        "required": [
          "name",
          "layers"
        ]
      },
      "WindowConstructionAbridged": {
        "title": "WindowConstructionAbridged",
        "description": "Construction for window objects (Aperture, Door).",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "WindowConstructionAbridged",
            "type": "string",
            "pattern": "^WindowConstructionAbridged$"
          },
          "layers": {
            "title": "Layers",
            "description": "List of strings for material names. The order of the materials is from exterior to interior.",
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "minItems": 1,
            "maxItems": 8
          }
        },
        "required": [
          "name",
          "layers"
        ]
      },
      "ShadeConstruction": {
        "title": "ShadeConstruction",
        "description": "Construction for Shade objects.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ShadeConstruction",
            "type": "string",
            "pattern": "^ShadeConstruction$"
          },
          "solar_reflectance": {
            "title": "Solar Reflectance",
            "description": " A number for the solar reflectance of the construction.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "visible_reflectance": {
            "title": "Visible Reflectance",
            "description": " A number for the visible reflectance of the construction.",
            "default": 0.2,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "is_specular": {
            "title": "Is Specular",
            "description": "Boolean to note whether the reflection off the shade is diffuse (False) or specular (True). Set to True if the construction is representing a glass facade or a mirror material.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyMaterial": {
        "title": "EnergyMaterial",
        "description": "Opaque material representing a layer within an opaque construction.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyMaterial",
            "type": "string",
            "pattern": "^EnergyMaterial$"
          },
          "roughness": {
            "title": "Roughness",
            "default": "MediumRough",
            "enum": [
              "VeryRough",
              "Rough",
              "MediumRough",
              "MediumSmooth",
              "Smooth",
              "VerySmooth"
            ],
            "type": "string"
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the material layer in meters.",
            "exclusiveMinimum": 0,
            "maximum": 3,
            "type": "number"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "Thermal conductivity of the material layer in W/(m-K).",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "density": {
            "title": "Density",
            "description": "Density of the material layer in kg/m3.",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "specific_heat": {
            "title": "Specific Heat",
            "description": "Specific heat of the material layer in J/(kg-K).",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "thermal_absorptance": {
            "title": "Thermal Absorptance",
            "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default value is 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 0.99999,
            "type": "number"
          },
          "solar_absorptance": {
            "title": "Solar Absorptance",
            "description": "Fraction of incident solar radiation absorbed by the material. Default value is 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "visible_absorptance": {
            "title": "Visible Absorptance",
            "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default value is 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name",
          "thickness",
          "conductivity",
          "density",
          "specific_heat"
        ]
      },
      "EnergyMaterialNoMass": {
        "title": "EnergyMaterialNoMass",
        "description": "No mass opaque material representing a layer within an opaque construction.\n\nUsed when only the thermal resistance (R value) of the material is known.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyMaterialNoMass",
            "type": "string",
            "pattern": "^EnergyMaterialNoMass$"
          },
          "r_value": {
            "title": "R Value",
            "description": "The thermal resistance (R-value) of the material layer [m2-K/W].",
            "minimum": 0.001,
            "type": "number"
          },
          "roughness": {
            "title": "Roughness",
            "default": "MediumRough",
            "enum": [
              "VeryRough",
              "Rough",
              "MediumRough",
              "MediumSmooth",
              "Smooth",
              "VerySmooth"
            ],
            "type": "string"
          },
          "thermal_absorptance": {
            "title": "Thermal Absorptance",
            "description": "Fraction of incident long wavelength radiation that is absorbed by the material. Default value is 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "maximum": 0.99999,
            "type": "number"
          },
          "solar_absorptance": {
            "title": "Solar Absorptance",
            "description": "Fraction of incident solar radiation absorbed by the material. Default value is 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "visible_absorptance": {
            "title": "Visible Absorptance",
            "description": "Fraction of incident visible wavelength radiation absorbed by the material. Default value is 0.7.",
            "default": 0.7,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name",
          "r_value"
        ]
      },
      "EnergyWindowMaterialGas": {
        "title": "EnergyWindowMaterialGas",
        "description": "Create single layer of gas in a window construction.\n\nCan be combined with EnergyWindowMaterialGlazing to make multi-pane windows.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGas",
            "type": "string",
            "pattern": "^EnergyWindowMaterialGas$"
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the gas layer in meters. Default value is 0.0125.",
            "default": 0.0125,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "gas_type": {
            "title": "Gas Type",
            "default": "Air",
            "enum": [
              "Air",
              "Argon",
              "Krypton",
              "Xenon"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyWindowMaterialGasCustom": {
        "title": "EnergyWindowMaterialGasCustom",
        "description": "Create single layer of custom gas.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGasCustom",
            "type": "string",
            "pattern": "^EnergyWindowMaterialGasCustom$"
          },
          "thickness": {
            "title": "Thickness",
            "description": "Thickness of the gas layer in meters. Default value is 0.0125.",
            "default": 0.0125,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "conductivity_coeff_a": {
            "title": "Conductivity Coeff A",
            "description": "The A coefficient for gas conductivity in W/(m-K).",
            "type": "number"
          },
          "conductivity_coeff_b": {
            "title": "Conductivity Coeff B",
            "description": "The B coefficient for gas conductivity in W/(m-K2).",
            "default": 0,
            "type": "number"
          },
          "conductivity_coeff_c": {
            "title": "Conductivity Coeff C",
            "description": "The C coefficient for gas conductivity in W/(m-K3).",
            "default": 0,
            "type": "number"
          },
          "viscosity_coeff_a": {
            "title": "Viscosity Coeff A",
            "description": "The A coefficient for gas viscosity in kg/(m-s).",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "viscosity_coeff_b": {
            "title": "Viscosity Coeff B",
            "description": "The B coefficient for gas viscosity in kg/(m-s-K).",
            "default": 0,
            "type": "number"
          },
          "viscosity_coeff_c": {
            "title": "Viscosity Coeff C",
            "description": "The C coefficient for gas viscosity in kg/(m-s-K2).",
            "default": 0,
            "type": "number"
          },
          "specific_heat_coeff_a": {
            "title": "Specific Heat Coeff A",
            "description": "The A coefficient for gas specific heat in J/(kg-K).",
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "specific_heat_coeff_b": {
            "title": "Specific Heat Coeff B",
            "description": "The B coefficient for gas specific heat in J/(kg-K2).",
            "default": 0,
            "type": "number"
          },
          "specific_heat_coeff_c": {
            "title": "Specific Heat Coeff C",
            "description": "The C coefficient for gas specific heat in J/(kg-K3).",
            "default": 0,
            "type": "number"
          },
          "specific_heat_ratio": {
            "title": "Specific Heat Ratio",
            "description": "The specific heat ratio for gas.",
            "exclusiveMinimum": 1,
            "type": "number"
          },
          "molecular_weight": {
            "title": "Molecular Weight",
            "description": "The molecular weight for gas in g/mol.",
            "minimum": 20,
            "maximum": 200,
            "type": "number"
          }
        },
        "required": [
          "name",
          "conductivity_coeff_a",
          "viscosity_coeff_a",
          "specific_heat_coeff_a",
          "specific_heat_ratio",
          "molecular_weight"
        ]
      },
      "EnergyWindowMaterialGasMixture": {
        "title": "EnergyWindowMaterialGasMixture",
        "description": "Create a mixture of two to four different gases to fill the panes of multiple\npane windows.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGasMixture",
            "type": "string",
            "pattern": "^EnergyWindowMaterialGasMixture$"
          },
          "thickness": {
            "title": "Thickness",
            "description": "The thickness of the gas mixture layer in meters.",
            "default": 0.0125,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "gas_types": {
            "title": "Gas Types",
            "description": "List of gases in the gas mixture.",
            "type": "array",
            "items": {
              "enum": [
                "Air",
                "Argon",
                "Krypton",
                "Xenon"
              ],
              "type": "string"
            },
            "minItems": 2,
            "maxItems": 4
          },
          "gas_fractions": {
            "title": "Gas Fractions",
            "description": "A list of fractional numbers describing the volumetric fractions of gas types in the mixture. This list must align with the gas_types list and must sum to 1.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 4
          }
        },
        "required": [
          "name",
          "gas_types",
          "gas_fractions"
        ]
      },
      "EnergyWindowMaterialSimpleGlazSys": {
        "title": "EnergyWindowMaterialSimpleGlazSys",
        "description": "Describe an entire glazing system rather than individual layers.\n\nUsed when only very limited information is available on the glazing layers or when\nspecific performance levels are being targeted.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialSimpleGlazSys",
            "type": "string",
            "pattern": "^EnergyWindowMaterialSimpleGlazSys$"
          },
          "u_factor": {
            "title": "U Factor",
            "description": "Used to describe the value for window system U-Factor, or overall heat transfer coefficient in W/(m2-K).",
            "exclusiveMinimum": 0,
            "maximum": 5.8,
            "type": "number"
          },
          "shgc": {
            "title": "Shgc",
            "description": "Unitless  quantity describing Solar Heat Gain Coefficient for normal incidence and vertical orientation.",
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number"
          },
          "vt": {
            "title": "Vt",
            "description": "The fraction of visible light falling on the window that makes it through the glass at normal incidence.",
            "default": 0.54,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name",
          "u_factor",
          "shgc"
        ]
      },
      "EnergyWindowMaterialBlind": {
        "title": "EnergyWindowMaterialBlind",
        "description": "Window blind properties.\n\nWindow blind properties consist of flat, equally-spaced slats.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialBlind",
            "type": "string",
            "pattern": "^EnergyWindowMaterialBlind$"
          },
          "slat_orientation": {
            "title": "Slat Orientation",
            "default": "Horizontal",
            "enum": [
              "Horizontal",
              "Vertical",
              "Choices include Horizontal and Vertical. Horizontal means the slats are parallel to the X-axis of the window. Vertical means the slats are parallel to the Y-axis of the window."
            ],
            "type": "string"
          },
          "slat_width": {
            "title": "Slat Width",
            "description": "The width of slat measured from edge to edge in meters.",
            "default": 0.025,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "slat_separation": {
            "title": "Slat Separation",
            "description": "The distance between the front of a slat and the back of the adjacent slat in meters.",
            "default": 0.01875,
            "exclusiveMinimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "slat_thickness": {
            "title": "Slat Thickness",
            "description": "The distance between the faces of a slat in meters. The default value is 0.001.",
            "default": 0.001,
            "exclusiveMinimum": 0,
            "maximum": 0.1,
            "type": "number"
          },
          "slat_angle": {
            "title": "Slat Angle",
            "description": "The angle (degrees) between the glazing outward normal and the slat outward normal where the outward normal points away from the front face of the slat (degrees). The default value is 45.",
            "default": 45,
            "minimum": 0,
            "maximum": 180,
            "type": "number"
          },
          "slat_conductivity": {
            "title": "Slat Conductivity",
            "description": "The thermal conductivity of the slat in W/(m-K). Default value is 221.",
            "default": 221,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "beam_solar_transmittance": {
            "title": "Beam Solar Transmittance",
            "description": "The beam solar transmittance of the slat, assumed to be independent of angle of incidence on the slat. Any transmitted beam radiation is assumed to be 100% diffuse (i.e., slats are translucent). The default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "beam_solar_reflectance": {
            "title": "Beam Solar Reflectance",
            "description": "The beam solar reflectance of the front side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "beam_solar_reflectance_back": {
            "title": "Beam Solar Reflectance Back",
            "description": "The beam solar reflectance of the back side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "diffuse_solar_transmittance": {
            "title": "Diffuse Solar Transmittance",
            "description": "The slat transmittance for hemisperically diffuse solar radiation. Default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "diffuse_solar_reflectance": {
            "title": "Diffuse Solar Reflectance",
            "description": "The front-side slat reflectance for hemispherically diffuse solar radiation. Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "diffuse_solar_reflectance_back": {
            "title": "Diffuse Solar Reflectance Back",
            "description": "The back-side slat reflectance for hemispherically diffuse solar radiation. Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "beam_visible_transmittance": {
            "title": "Beam Visible Transmittance",
            "description": "The beam visible transmittance of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "beam_visible_reflectance": {
            "title": "Beam Visible Reflectance",
            "description": "The beam visible reflectance on the front side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "beam_visible_reflectance_back": {
            "title": "Beam Visible Reflectance Back",
            "description": "The beam visible reflectance on the back side of the slat, it is assumed to be independent of the angle of incidence. Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "diffuse_visible_transmittance": {
            "title": "Diffuse Visible Transmittance",
            "description": "The slat transmittance for hemispherically diffuse visible radiation. This value should equal \u201cSlat Beam Visible Transmittance.\u201d",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "diffuse_visible_reflectance": {
            "title": "Diffuse Visible Reflectance",
            "description": "The front-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cFront Side Slat Beam Visible Reflectance.\u201d Default value is 0.5.",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "diffuse_visible_reflectance_back": {
            "title": "Diffuse Visible Reflectance Back",
            "description": "The back-side slat reflectance for hemispherically diffuse visible radiation. This value should equal \u201cBack Side Slat Beam Visible Reflectance. Default value is 0.5.\u201d",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "infrared_transmittance": {
            "title": "Infrared Transmittance",
            "description": "The slat infrared hemispherical transmittance. It is zero for solid metallic, wooden or glass slats, but may be non-zero in some cases such as for thin plastic slats. The default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "emissivity": {
            "title": "Emissivity",
            "description": "Front side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
            "default": 0.9,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "emissivity_back": {
            "title": "Emissivity Back",
            "description": "Back side hemispherical emissivity of the slat. Default is 0.9 for most materials. The default value is 0.9.",
            "default": 0.9,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "distance_to_glass": {
            "title": "Distance To Glass",
            "description": "The distance from the mid-plane of the blind to the adjacent glass in meters. The default value is 0.05.",
            "default": 0.05,
            "minimum": 0.01,
            "maximum": 1,
            "type": "number"
          },
          "top_opening_multiplier": {
            "title": "Top Opening Multiplier",
            "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. The default value is 0.5",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "bottom_opening_multiplier": {
            "title": "Bottom Opening Multiplier",
            "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. The default value is 0.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "left_opening_multiplier": {
            "title": "Left Opening Multiplier",
            "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. The default value is 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "right_opening_multiplier": {
            "title": "Right Opening Multiplier",
            "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. The default value is 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyWindowMaterialGlazing": {
        "title": "EnergyWindowMaterialGlazing",
        "description": "Describe a single glass pane corresponding to a layer in a window construction.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialGlazing",
            "type": "string",
            "pattern": "^EnergyWindowMaterialGlazing$"
          },
          "thickness": {
            "title": "Thickness",
            "description": "The surface-to-surface of the glass in meters. Default value is 0.003.",
            "default": 0.003,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "solar_transmittance": {
            "title": "Solar Transmittance",
            "description": "Transmittance of solar radiation through the glass at normal incidence. Default value is 0.85 for clear glass.",
            "default": 0.85,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "solar_reflectance": {
            "title": "Solar Reflectance",
            "description": "Reflectance of solar radiation off of the front side of the glass at normal incidence, averaged over the solar spectrum. Default value is 0.075 for clear glass.",
            "default": 0.075,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "solar_reflectance_back": {
            "title": "Solar Reflectance Back",
            "description": "Reflectance of solar radiation off of the back side of the glass at normal incidence, averaged over the solar spectrum.",
            "type": "number"
          },
          "visible_transmittance": {
            "title": "Visible Transmittance",
            "description": "Transmittance of visible light through the glass at normal incidence. Default value is 0.9 for clear glass.",
            "default": 0.9,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "visible_reflectance": {
            "title": "Visible Reflectance",
            "description": "Reflectance of visible light off of the front side of the glass at normal incidence. Default value is 0.075 for clear glass.",
            "default": 0.075,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "visible_reflectance_back": {
            "title": "Visible Reflectance Back",
            "description": "Reflectance of visible light off of the back side of the glass at normal incidence averaged over the solar spectrum and weighted by the response of the human eye.",
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "infrared_transmittance": {
            "title": "Infrared Transmittance",
            "description": "Long-wave transmittance at normal incidence.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "emissivity": {
            "title": "Emissivity",
            "description": "Infrared hemispherical emissivity of the front (outward facing) side of the glass.  Default value is 0.84, which is typical for clear glass without a low-e coating.",
            "default": 0.84,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "emissivity_back": {
            "title": "Emissivity Back",
            "description": "Infrared hemispherical emissivity of the back (inward facing) side of the glass.  Default value is 0.84, which is typical for clear glass without a low-e coating.",
            "default": 0.84,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "Thermal conductivity of the glass in W/(m-K). Default value is 0.9, which is  typical for clear glass without a low-e coating.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "dirt_correction": {
            "title": "Dirt Correction",
            "description": "Factor that corrects for the presence of dirt on the glass. A default value of 1 indicates the glass is clean.",
            "default": 1,
            "type": "number"
          },
          "solar_diffusing": {
            "title": "Solar Diffusing",
            "description": "Takes values True and False. If False (default), the beam solar radiation incident on the glass is transmitted as beam radiation with no diffuse component.If True, the beam  solar radiation incident on the glass is transmitted as hemispherical diffuse radiation with no beam component.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyWindowMaterialShade": {
        "title": "EnergyWindowMaterialShade",
        "description": "This object specifies the properties of window shade materials.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "EnergyWindowMaterialShade",
            "type": "string",
            "pattern": "^EnergyWindowMaterialShade$"
          },
          "solar_transmittance": {
            "title": "Solar Transmittance",
            "description": "The transmittance averaged over the solar spectrum. It is assumed independent of incidence angle. Default value is 0.4.",
            "default": 0.4,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "solar_reflectance": {
            "title": "Solar Reflectance",
            "description": "The reflectance averaged over the solar spectrum. It us assumed same on both sides of shade and independent of incidence angle. Default value is 0.5",
            "default": 0.5,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "visible_transmittance": {
            "title": "Visible Transmittance",
            "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default value is 0.4.",
            "default": 0.4,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "visible_reflectance": {
            "title": "Visible Reflectance",
            "description": "The transmittance averaged over the solar spectrum and weighted by the response of the human eye. It is assumed independent of incidence angle. Default value is 0.4",
            "default": 0.4,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "emissivity": {
            "title": "Emissivity",
            "description": "The effective long-wave infrared hemispherical emissivity. It is assumed same on both sides of shade. Default value is 0.9.",
            "default": 0.9,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 1,
            "type": "number"
          },
          "infrared_transmittance": {
            "title": "Infrared Transmittance",
            "description": "The effective long-wave transmittance. It is assumed independent of incidence angle. Default value is 0.",
            "default": 0,
            "exclusiveMaximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "thickness": {
            "title": "Thickness",
            "description": "The thickness of the shade material in meters. Default value is 0.005.",
            "default": 0.005,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "conductivity": {
            "title": "Conductivity",
            "description": "The conductivity of the shade material in W/(m-K). Default value is 0.1.",
            "default": 0.1,
            "exclusiveMinimum": 0,
            "type": "number"
          },
          "distance_to_glass": {
            "title": "Distance To Glass",
            "description": "The distance from shade to adjacent glass in meters. Default value is 0.05",
            "default": 0.05,
            "minimum": 0.001,
            "maximum": 1,
            "type": "number"
          },
          "top_opening_multiplier": {
            "title": "Top Opening Multiplier",
            "description": "The effective area for air flow at the top of the shade, divided by the horizontal area between glass and shade. Default value is 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "bottom_opening_multiplier": {
            "title": "Bottom Opening Multiplier",
            "description": "The effective area for air flow at the bottom of the shade, divided by the horizontal area between glass and shade. Default value is 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "left_opening_multiplier": {
            "title": "Left Opening Multiplier",
            "description": "The effective area for air flow at the left side of the shade, divided by the vertical area between glass and shade. Default value is 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "right_opening_multiplier": {
            "title": "Right Opening Multiplier",
            "description": "The effective area for air flow at the right side of the shade, divided by the vertical area between glass and shade. Default value is 0.5.",
            "default": 0.5,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "airflow_permeability": {
            "title": "Airflow Permeability",
            "description": "The fraction of the shade surface that is open to air flow. If air cannot pass through the shade material, airflow_permeability = 0. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 0.8,
            "type": "number"
          }
        },
        "required": [
          "name"
        ]
      },
      "IdealAirSystemAbridged": {
        "title": "IdealAirSystemAbridged",
        "description": "Provides a model for an ideal HVAC system.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "IdealAirSystemAbridged",
            "type": "string",
            "pattern": "^IdealAirSystemAbridged$"
          },
          "economizer_type": {
            "title": "Economizer Type",
            "description": "Text to indicate the type of air-side economizer used on the ideal air system. Economizers will mix in a greater amount of outdoor air to cool the zone (rather than running the cooling system) when the zone needs cooling and the outdoor air is cooler than the zone.",
            "default": "DifferentialDryBulb",
            "enum": [
              "NoEconomizer",
              "DifferentialDryBulb",
              "DifferentialEnthalpy"
            ],
            "type": "string"
          },
          "demand_control_ventilation": {
            "title": "Demand Control Ventilation",
            "description": "Boolean to note whether demand controlled ventilation should be used on the system, which will vary the amount of ventilation air according to the occupancy schedule of the zone.",
            "default": false,
            "type": "boolean"
          },
          "sensible_heat_recovery": {
            "title": "Sensible Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of sensible heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "latent_heat_recovery": {
            "title": "Latent Heat Recovery",
            "description": "A number between 0 and 1 for the effectiveness of latent heat recovery within the system.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "heating_air_temperature": {
            "title": "Heating Air Temperature",
            "description": "A number for the maximum heating supply air temperature [C].",
            "default": 50,
            "exclusiveMinimum": 0,
            "exclusiveMaximum": 100,
            "type": "number"
          },
          "cooling_air_temperature": {
            "title": "Cooling Air Temperature",
            "description": "A number for the minimum cooling supply air temperature [C].",
            "default": 13,
            "exclusiveMinimum": -100,
            "exclusiveMaximum": 50,
            "type": "number"
          },
          "heating_limit": {
            "title": "Heating Limit",
            "description": "A number for the maximum heating capacity in Watts. This can also be the text \"autosize\" to indicate that the capacity should be determined during the EnergyPlus sizing calculation. This can also be the text \"NoLimit\" to indicate no upper limit to the heating capacity. Note that setting this to None will trigger the default (\"autosize\").",
            "default": "autosize",
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ]
          },
          "cooling_limit": {
            "title": "Cooling Limit",
            "description": "A number for the maximum cooling capacity in Watts. This can also be the text \"autosize\" to indicate that the capacity should be determined during the sizing calculation. This can also be the text \"NoLimit\" to indicate no upper limit to the cooling capacity. Note that setting this to None will trigger the default (\"autosize\").",
            "default": "autosize",
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ]
          },
          "heating_availability": {
            "title": "Heating Availability",
            "description": "An optional name of a schedule to set the availability of heating over the course of the simulation.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "cooling_availability": {
            "title": "Cooling Availability",
            "description": "An optional name of a schedule to set the availability of cooling over the course of the simulation.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "PeopleAbridged": {
        "title": "PeopleAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "PeopleAbridged",
            "type": "string",
            "pattern": "^PeopleAbridged$"
          },
          "people_per_area": {
            "title": "People Per Area",
            "description": "People per floor area expressed as [people/m2]",
            "minimum": 0,
            "type": "number"
          },
          "occupancy_schedule": {
            "title": "Occupancy Schedule",
            "description": "Name of a schedule for the occupancy over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the people_per_area to yield a complete occupancy profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "activity_schedule": {
            "title": "Activity Schedule",
            "description": "Name of a schedule for the activity of the occupants over the course of the year. The type of this schedule should be Power and the values of the schedule equal to the number of Watts given off by an individual person in the room.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "The radiant fraction of sensible heat released by people. The defaultvalue is 0.30.",
            "default": 0.3,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the latent fraction of heat gain due to people or simply the word \"autocalculate\".",
            "default": "autocalculate",
            "anyOf": [
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "name",
          "people_per_area",
          "occupancy_schedule",
          "activity_schedule"
        ]
      },
      "LightingAbridged": {
        "title": "LightingAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "LightingAbridged",
            "type": "string",
            "pattern": "^LightingAbridged$"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Lighting per floor area as [W/m2].",
            "minimum": 0,
            "type": "number"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Name of the schedule for the use of lights over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete lighting profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "visible_fraction": {
            "title": "Visible Fraction",
            "description": "The fraction of heat from lights that goes into the zone as visible (short-wave) radiation. The default value is `0.25`.",
            "default": 0.25,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "The fraction of heat from lights that is long-wave radiation. Default value is `0.32`.",
            "default": 0.32,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "return_air_fraction": {
            "title": "Return Air Fraction",
            "description": "The fraction of the heat from lights that goes into the zone return air. Default value is `0`.",
            "default": 0.0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          }
        },
        "required": [
          "name",
          "watts_per_area",
          "schedule"
        ]
      },
      "ElectricEquipmentAbridged": {
        "title": "ElectricEquipmentAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Equipment level per floor area as [W/m2].",
            "minimum": 0,
            "type": "number"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Name of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
            "default": 0,
            "anyOf": [
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              {
                "type": "string"
              }
            ]
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "type": {
            "title": "Type",
            "default": "ElectricEquipmentAbridged",
            "type": "string",
            "pattern": "^ElectricEquipmentAbridged$"
          }
        },
        "required": [
          "name",
          "watts_per_area",
          "schedule"
        ]
      },
      "GasEquipmentAbridged": {
        "title": "GasEquipmentAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "watts_per_area": {
            "title": "Watts Per Area",
            "description": "Equipment level per floor area as [W/m2].",
            "minimum": 0,
            "type": "number"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Name of the schedule for the use of equipment over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the watts_per_area to yield a complete equipment profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "radiant_fraction": {
            "title": "Radiant Fraction",
            "description": "Number for the amount of long-wave radiation heat given off by electric equipment. Default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "latent_fraction": {
            "title": "Latent Fraction",
            "description": "Number for the amount of latent heat given off by electricequipment. Default value is 0.",
            "default": 0,
            "anyOf": [
              {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              {
                "type": "string"
              }
            ]
          },
          "lost_fraction": {
            "title": "Lost Fraction",
            "description": "Number for the amount of \u201clost\u201d heat being given off by equipment. The default value is 0.",
            "default": 0,
            "minimum": 0,
            "maximum": 1,
            "type": "number"
          },
          "type": {
            "title": "Type",
            "default": "GasEquipmentAbridged",
            "type": "string",
            "pattern": "^GasEquipmentAbridged$"
          }
        },
        "required": [
          "name",
          "watts_per_area",
          "schedule"
        ]
      },
      "InfiltrationAbridged": {
        "title": "InfiltrationAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "InfiltrationAbridged",
            "type": "string",
            "pattern": "^InfiltrationAbridged$"
          },
          "flow_per_exterior_area": {
            "title": "Flow Per Exterior Area",
            "description": "Number for the infiltration per exterior surface area in m3/s-m2.",
            "minimum": 0,
            "type": "number"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Name of the schedule for the infiltration over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the flow_per_exterior_area to yield a complete infiltration profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "constant_coefficient": {
            "title": "Constant Coefficient",
            "default": 1,
            "minimum": 0,
            "type": "number"
          },
          "temperature_coefficient": {
            "title": "Temperature Coefficient",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "velocity_coefficient": {
            "title": "Velocity Coefficient",
            "default": 0,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "name",
          "flow_per_exterior_area",
          "schedule"
        ]
      },
      "VentilationAbridged": {
        "title": "VentilationAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "VentilationAbridged",
            "type": "string",
            "pattern": "^VentilationAbridged$"
          },
          "flow_per_person": {
            "title": "Flow Per Person",
            "description": "Intensity of ventilation in[] m3/s per person]. Note that setting this value does not mean that ventilation is varied based on real-time occupancy but rather that the design level of ventilation is determined using this value and the People object of the Room.",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "flow_per_area": {
            "title": "Flow Per Area",
            "description": "Intensity of ventilation in [m3/s per m2 of floor area].",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "air_changes_per_hour": {
            "title": "Air Changes Per Hour",
            "description": "Intensity of ventilation in air changes per hour (ACH) for the entire Room.",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "flow_per_zone": {
            "title": "Flow Per Zone",
            "description": "Intensity of ventilation in m3/s for the entire Room.",
            "default": 0,
            "minimum": 0,
            "type": "number"
          },
          "schedule": {
            "title": "Schedule",
            "description": "Name of the schedule for the ventilation over the course of the year. The type of this schedule should be Fractional and the fractional values will get multiplied by the total design flow rate (determined from the sum of the other 4 fields) to yield a complete ventilation profile.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "SetpointAbridged": {
        "title": "SetpointAbridged",
        "description": "Used to specify information about the setpoint schedule.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "SetpointAbridged",
            "type": "string",
            "pattern": "^SetpointAbridged$"
          },
          "cooling_schedule": {
            "title": "Cooling Schedule",
            "description": "Name of the schedule for the cooling setpoint. The values in this schedule should be temperature in [C].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "heating_schedule": {
            "title": "Heating Schedule",
            "description": "Name of the schedule for the heating setpoint. The values in this schedule should be temperature in [C].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "humidification_schedule": {
            "title": "Humidification Schedule",
            "description": "Name of the schedule for the humidification setpoint. The values in this schedule should be in [%].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "dehumidification_schedule": {
            "title": "Dehumidification Schedule",
            "description": "Name of the schedule for the dehumidification setpoint. The values in this schedule should be in [%].",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "cooling_schedule",
          "heating_schedule"
        ]
      },
      "ProgramTypeAbridged": {
        "title": "ProgramTypeAbridged",
        "description": "Base class for all objects requiring a valid EnergyPlus name.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ProgramTypeAbridged",
            "type": "string",
            "pattern": "^ProgramTypeAbridged$"
          },
          "people": {
            "title": "People",
            "description": "People to describe the occupancy of the program. If None, no occupancy will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PeopleAbridged"
              }
            ]
          },
          "lighting": {
            "title": "Lighting",
            "description": "Lighting to describe the lighting usage of the program. If None, no lighting will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LightingAbridged"
              }
            ]
          },
          "electrical_equipment": {
            "title": "Electrical Equipment",
            "description": "ElectricEquipment to describe the usage of electric equipment within the program. If None, no electric equipment will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ElectricEquipmentAbridged"
              }
            ]
          },
          "gas_equipment": {
            "title": "Gas Equipment",
            "description": "GasEquipment to describe the usage of gas equipment within the program. If None, no gas equipment will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GasEquipmentAbridged"
              }
            ]
          },
          "infiltration": {
            "title": "Infiltration",
            "description": "Infiltration to describe the outdoor air leakage of the program. If None, no infiltration will be assumed for the program.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InfiltrationAbridged"
              }
            ]
          },
          "ventilation": {
            "title": "Ventilation",
            "description": "Ventilation to describe the minimum outdoor air requirement of the program. If None, no ventilation requirement will be assumed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VentilationAbridged"
              }
            ]
          },
          "setpoint": {
            "title": "Setpoint",
            "description": "Setpoint object to describe the temperature and humidity setpoints of the program.  If None, the ProgramType cannot be assigned to a Room that is conditioned.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SetpointAbridged"
              }
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "ScheduleDay": {
        "title": "ScheduleDay",
        "description": "Used to describe the daily schedule for a single simulation day.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleDay",
            "type": "string",
            "pattern": "^ScheduleDay$"
          },
          "values": {
            "title": "Values",
            "description": "A list of floats or integers for the values of the schedule. The length of this list must match the length of the times list.",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "times": {
            "title": "Times",
            "description": "A list of lists with each sub-list possesing 2 values for [hour, minute]. The length of the master list must match the length of the values list. Each time in the master list represents the time of day that the corresponding value begins to take effect. For example [(0,0), (9,0), (17,0)] in combination with the values [0, 1, 0] denotes a schedule value of 0 from 0:00 to 9:00, a value of 1 from 9:00 to 17:00 and 0 from 17:00 to the end of the day. Note that this representation of times as the \"time of beginning\" is a different convention than EnergyPlus, which uses \"time until\".",
            "default": [
              0,
              0
            ],
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "interpolate": {
            "title": "Interpolate",
            "description": "Boolean to note whether values in between times should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corrsponding to them.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "values"
        ]
      },
      "ScheduleRuleAbridged": {
        "title": "ScheduleRuleAbridged",
        "description": "Schedule rule including a ScheduleDay and when it should be applied..",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ScheduleRuleAbridged",
            "type": "string",
            "pattern": "^ScheduleRuleAbridged$"
          },
          "schedule_day": {
            "title": "Schedule Day",
            "description": "A ScheduleDay object associated with this rule.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "apply_sunday": {
            "title": "Apply Sunday",
            "description": "Boolean noting whether to apply schedule_day on Sundays.",
            "default": false,
            "type": "boolean"
          },
          "apply_monday": {
            "title": "Apply Monday",
            "description": "Boolean noting whether to apply schedule_day on Mondays.",
            "default": false,
            "type": "boolean"
          },
          "apply_tuesday": {
            "title": "Apply Tuesday",
            "description": "Boolean noting whether to apply schedule_day on Tuesdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_wednesday": {
            "title": "Apply Wednesday",
            "description": "Boolean noting whether to apply schedule_day on Wednesdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_thursday": {
            "title": "Apply Thursday",
            "description": "Boolean noting whether to apply schedule_day on Thursdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_friday": {
            "title": "Apply Friday",
            "description": "Boolean noting whether to apply schedule_day on Fridays.",
            "default": false,
            "type": "boolean"
          },
          "apply_saturday": {
            "title": "Apply Saturday",
            "description": "Boolean noting whether to apply schedule_day on Saturdays.",
            "default": false,
            "type": "boolean"
          },
          "apply_holiday": {
            "title": "Apply Holiday",
            "description": "Boolean noting whether to apply schedule_day on Holidays.",
            "default": false,
            "type": "boolean"
          },
          "start_date": {
            "title": "Start Date",
            "description": "A list of two integers for [month, day], representing the start date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              1,
              1
            ],
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 2,
            "maxItems": 3
          },
          "end_date": {
            "title": "End Date",
            "description": "A list of two integers for [month, day], representing the end date of the period over which the schedule_day will be applied.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              12,
              31
            ],
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 2,
            "maxItems": 3
          }
        },
        "required": [
          "schedule_day"
        ]
      },
      "ScheduleRulesetAbridged": {
        "title": "ScheduleRulesetAbridged",
        "description": "Used to define a schedule for a default day, further described by ScheduleRule.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleRulesetAbridged",
            "type": "string",
            "pattern": "^ScheduleRulesetAbridged$"
          },
          "day_schedules": {
            "title": "Day Schedules",
            "description": "A list of ScheduleDays that are referenced in the other keys of this ScheduleRulesetAbridged.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDay"
            }
          },
          "default_day_schedule": {
            "title": "Default Day Schedule",
            "description": "A name for the ScheduleDay that will be used for all days when no ScheduleRule is applied. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "schedule_rules": {
            "title": "Schedule Rules",
            "description": "A list of ScheduleRuleAbridged that note exceptions to the default_day_schedule. These rules should be ordered from highest to lowest priority.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleRuleAbridged"
            }
          },
          "summer_designday_schedule": {
            "title": "Summer Designday Schedule",
            "description": "A name for the ScheduleDay that will be used for the summer design day. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "winter_designday_schedule": {
            "title": "Winter Designday Schedule",
            "description": "A name for the ScheduleDay that will be used for the winter design day. This ScheduleDay must be in the day_schedules.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "schedule_type_limit": {
            "title": "Schedule Type Limit",
            "description": "Name of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name",
          "day_schedules",
          "default_day_schedule"
        ]
      },
      "ScheduleFixedIntervalAbridged": {
        "title": "ScheduleFixedIntervalAbridged",
        "description": "Used to specify a start date and a list of values for a period of analysis.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleFixedIntervalAbridged",
            "type": "string",
            "pattern": "^ScheduleFixedIntervalAbridged$"
          },
          "values": {
            "title": "Values",
            "description": "A list of timeseries values occuring at each timestep over the course of the simulation.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 24,
            "maxItems": 527040
          },
          "schedule_type_limit": {
            "title": "Schedule Type Limit",
            "description": "Name of a ScheduleTypeLimit that will be used to validate schedule values against upper/lower limits and assign units to the schedule values. If None, no validation will occur.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "timestep": {
            "title": "Timestep",
            "description": "An integer for the number of steps per hour that the input values correspond to.  For example, if each value represents 30 minutes, the timestep is 2. For 15 minutes, it is 4.",
            "default": 1,
            "type": "integer"
          },
          "start_date": {
            "title": "Start Date",
            "description": "A list of two integers for [month, day], representing the start date when the schedule values begin to take effect.A third integer may be added to denote whether the date should be re-serialized for a leap year (it should be a 1 in this case).",
            "default": [
              1,
              1
            ],
            "type": "array",
            "items": {
              "type": "integer"
            },
            "minItems": 2,
            "maxItems": 3
          },
          "placeholder_value": {
            "title": "Placeholder Value",
            "description": " A value that will be used for all times not covered by the input values. Typically, your simulation should not need to use this value if the input values completely cover the simulation period.",
            "default": 0,
            "type": "number"
          },
          "interpolate": {
            "title": "Interpolate",
            "description": "Boolean to note whether values in between intervals should be linearly interpolated or whether successive values should take effect immediately upon the beginning time corrsponding to them.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "values"
        ]
      },
      "ScheduleTypeLimit": {
        "title": "ScheduleTypeLimit",
        "description": "Specifies the data types and limits for values contained in schedules.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object. Must use only ASCII characters and exclude (, ; ! \\n \\t). It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ScheduleTypeLimit",
            "type": "string",
            "pattern": "^ScheduleTypeLimit$"
          },
          "lower_limit": {
            "title": "Lower Limit",
            "description": "Lower limit for the schedule type is entered.",
            "type": "number"
          },
          "upper_limit": {
            "title": "Upper Limit",
            "description": "Upper limit for the schedule type is entered.",
            "type": "number"
          },
          "numeric_type": {
            "title": "Numeric Type",
            "default": "Continuous",
            "enum": [
              "Continuous",
              "Discrete"
            ],
            "type": "string"
          },
          "unit_type": {
            "title": "Unit Type",
            "default": "Dimensionless",
            "enum": [
              "Dimensionless",
              "Temperature",
              "DeltaTemperature",
              "PrecipitationRate",
              "Angle",
              "ConvectionCoefficient",
              "ActivityLevel",
              "Velocity",
              "Capacity",
              "Power",
              "Availability",
              "Percent",
              "Control",
              "Mode"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ModelEnergyProperties": {
        "title": "ModelEnergyProperties",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ModelEnergyProperties",
            "type": "string",
            "pattern": "^ModelEnergyProperties$"
          },
          "terrain_type": {
            "title": "Terrain Type",
            "description": "Text for the terrain in which the model sits. This is used to determine the wind profile over the height of the buildings.",
            "default": "City",
            "enum": [
              "Ocean",
              "Country",
              "Suburbs",
              "Urban",
              "City"
            ],
            "type": "string"
          },
          "global_construction_set": {
            "title": "Global Construction Set",
            "description": "Name for the ConstructionSet to be used for all objects lacking their own construction or a parent construction_set. This ConstructionSet must appear under the Model construction_sets.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "construction_sets": {
            "title": "Construction Sets",
            "description": "List of all ConstructionSets in the Model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructionSetAbridged"
            }
          },
          "constructions": {
            "title": "Constructions",
            "description": "A list of all unique constructions in the model. This includes constructions across all the Model construction_sets.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OpaqueConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/WindowConstructionAbridged"
                },
                {
                  "$ref": "#/components/schemas/ShadeConstruction"
                }
              ]
            }
          },
          "materials": {
            "title": "Materials",
            "description": "A list of all unique materials in the model. This includes materials needed to make the Model constructions.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EnergyMaterial"
                },
                {
                  "$ref": "#/components/schemas/EnergyMaterialNoMass"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGas"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGasCustom"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGasMixture"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialSimpleGlazSys"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialBlind"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialGlazing"
                },
                {
                  "$ref": "#/components/schemas/EnergyWindowMaterialShade"
                }
              ]
            }
          },
          "hvacs": {
            "title": "Hvacs",
            "description": "List of all HVAC systems in the Model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdealAirSystemAbridged"
            }
          },
          "program_types": {
            "title": "Program Types",
            "description": "List of all ProgramTypes in the Model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProgramTypeAbridged"
            }
          },
          "schedules": {
            "title": "Schedules",
            "description": "A list of all unique schedules in the model. This includes schedules across all HVAC systems, ProgramTypes and ContextShades.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ScheduleRulesetAbridged"
                },
                {
                  "$ref": "#/components/schemas/ScheduleFixedIntervalAbridged"
                }
              ]
            }
          },
          "schedule_type_limits": {
            "title": "Schedule Type Limits",
            "description": "A list of all unique ScheduleTypeLimits in the model. This all ScheduleTypeLimits needed to make the Model schedules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleTypeLimit"
            }
          }
        },
        "required": [
          "constructions",
          "materials"
        ]
      },
      "ModelProperties": {
        "title": "ModelProperties",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "default": "ModelProperties",
            "type": "string",
            "pattern": "^ModelProperties$"
          },
          "energy": {
            "$ref": "#/components/schemas/ModelEnergyProperties"
          }
        }
      },
      "Model": {
        "title": "Model",
        "description": "Base class for all objects requiring a valid names for all engines.",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "description": "Name of the object used in all simulation engines. Must not contain spaces and use only letters, digits and underscores/dashes. It cannot be longer than 100 characters.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "[A-Za-z0-9_-]",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "description": "Display name of the object with no restrictions.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "Model",
            "type": "string",
            "pattern": "^Model$"
          },
          "buildings": {
            "title": "Buildings",
            "description": "A list of Buildings in the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Building"
            }
          },
          "context_shades": {
            "title": "Context Shades",
            "description": "A list of ContextShades in the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContextShade"
            }
          },
          "north_angle": {
            "title": "North Angle",
            "description": "The clockwise north direction in degrees.",
            "default": 0,
            "exclusiveMaximum": 360,
            "minimum": 0,
            "type": "number"
          },
          "properties": {
            "title": "Properties",
            "description": "Extension properties for particular simulation engines (Radiance, EnergyPlus).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelProperties"
              }
            ]
          }
        },
        "required": [
          "name",
          "buildings",
          "properties"
        ]
      }
    }
  }
}